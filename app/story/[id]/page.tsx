import CreateReview from "@/components/CreateReview";
import DeleteReview from "@/components/DeleteReview";
import { buttonVariants } from "@/components/ui/button";
import { Dialog, DialogContent, DialogHeader, DialogTitle, DialogTrigger } from "@/components/ui/dialog";
import { TextGenerateEffect } from "@/components/ui/text-generate-effect";
import { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from "@/components/ui/tooltip";
import { TracingBeam } from "@/components/ui/tracing-beam";
import { getReviews } from "@/utils/actions/database/getReviews";
import getSession from "@/utils/actions/database/getSession";
import { getStory } from "@/utils/actions/database/getStory";
import getUserInfo from "@/utils/actions/database/getUserinfo";
import { Bookmark, BotIcon, MessageSquareText } from "lucide-react";
import Image from "next/image";
import Link from "next/link";
import { redirect } from "next/navigation";

export default async function StoryDetails({
  params,
  searchParams,
}: {
  params: { id: string };
  searchParams: { isReview: boolean };
}) {
  const story = await getStory(params.id);

  let user = await getUserInfo(story?.user_id!!);

  if (!user) {
    redirect("/app");
  }

  const accountInfo = [user.stories!!, 20, 570];

  const icons = ["/icons/book.png", "/icons/star.png", "/icons/bookmark.png"];

  const reviews = await getReviews({
    storyId: Number(params.id),
    commentsCount: 20,
  });

  const currentUser = await getSession();

  return (
    <main className="mx-auto my-12 flex w-full flex-col gap-2 py-8">
      <div className="mx-auto flex w-full flex-col">
        <TracingBeam className="pb-10 pt-6">
          <h1
            style={{
              textShadow: "0em 0em 0.3em rgba(255,255,255,0.6)",
            }}
            className="mb-5 text-4xl font-bold">
            {story?.title!!}
          </h1>
          <TextGenerateEffect className="max-w-4xl tracking-wider" words={story!!.story!!} />
        </TracingBeam>
        <div className="mx-auto flex w-full max-w-5xl flex-col">
          <p className="mb-2 font-mono text-sm text-white/35">Generated by</p>
          <div className="flex w-full items-center gap-3">
            <a href="" className="w-[fit-content]">
              <Image
                src={user.data.image || "/icons/pfp1.png"}
                width={150}
                height={150}
                alt="Author"
                className="h-9 w-9 cursor-pointer rounded-full"
              />
            </a>
            <div className="flex flex-col gap-1">
              <a href="" className="w-[fit-content]">
                <h2
                  style={{
                    textShadow: "0em 0em 0.3em white",
                  }}
                  className="w-full cursor-pointer text-base font-bold hover:underline">
                  {user.data.name!!}
                </h2>
              </a>
              <div className="flex flex-row text-start">
                {accountInfo.map((info: any, index) => (
                  <div className="flex items-start gap-0" key={index}>
                    <Image
                      className="mr-1 h-[0.8rem] w-[0.8rem] invert"
                      src={icons[index]}
                      alt="story-img"></Image>
                    <span
                      style={{
                        textShadow: "0em 0em 0.4em white",
                      }}
                      className="mr-2 text-xs font-bold">
                      {info}
                    </span>
                  </div>
                ))}
              </div>
            </div>
          </div>
          <div className="mb-7 flex w-full items-center gap-3 pt-4">
            <TooltipProvider delayDuration={300}>
              <Tooltip>
                <TooltipTrigger>
                  <Link
                    className={buttonVariants({
                      variant: "outline",
                    })}
                    href={""}>
                    <BotIcon className="mx-4 my-2 size-5"></BotIcon>
                  </Link>
                </TooltipTrigger>
                <TooltipContent
                  className="m-0 border-none bg-transparent p-0 font-mono text-xs font-extralight outline-none"
                  side="bottom">
                  <p
                    style={{
                      textShadow: "0em 0em 0.3em white",
                    }}>
                    Remix generation
                  </p>
                </TooltipContent>
              </Tooltip>
            </TooltipProvider>
            {story?.user_id != currentUser.user?.id && (
              <>
                <TooltipProvider delayDuration={300}>
                  <Tooltip>
                    <TooltipTrigger>
                      <Dialog defaultOpen={searchParams.isReview}>
                        <DialogTrigger asChild>
                          <Link
                            className={buttonVariants({
                              variant: "outline",
                            })}
                            href={""}>
                            <MessageSquareText className="mx-4 my-2 size-4"></MessageSquareText>
                          </Link>
                        </DialogTrigger>
                        <DialogContent className="sm:max-w-[425px]">
                          <DialogHeader>
                            <DialogTitle>Add a review</DialogTitle>
                          </DialogHeader>
                          <CreateReview storyId={story?.id!!} authorId={currentUser!!.user!!.id} />
                        </DialogContent>
                      </Dialog>
                    </TooltipTrigger>
                    <TooltipContent
                      className="z-2 m-0 border-none bg-transparent p-0 font-mono text-xs font-extralight outline-none"
                      side="bottom">
                      <p
                        style={{
                          textShadow: "0em 0em 0.3em white",
                        }}>
                        Add a review
                      </p>
                    </TooltipContent>
                  </Tooltip>
                </TooltipProvider>
                <TooltipProvider delayDuration={300}>
                  <Tooltip>
                    <TooltipTrigger>
                      <Link
                        className={buttonVariants({
                          variant: "outline",
                        })}
                        href={""}>
                        <Bookmark className="mx-4 my-2 size-4"></Bookmark>
                      </Link>
                    </TooltipTrigger>
                    <TooltipContent
                      className="m-0 border-none bg-transparent p-0 font-mono text-xs font-extralight outline-none"
                      side="bottom">
                      <p
                        style={{
                          textShadow: "0em 0em 0.3em white",
                        }}>
                        Add to library
                      </p>
                    </TooltipContent>
                  </Tooltip>
                </TooltipProvider>
              </>
            )}
          </div>
          <p className="mb-2 font-mono text-sm text-white/60">Reviews</p>
          <div className="container flex h-[30vh] w-full flex-col items-start gap-3 overflow-y-auto overflow-x-hidden rounded-lg border border-solid border-white/15 bg-black/10 p-5 pt-4">
            {reviews!!.length == 0 ? (
              <>No reviews (yet...)</>
            ) : (
              <>
                {reviews!!.map(async (rev, index) => (
                  <div className="mx-auto flex w-[60rem] flex-col gap-2" key={index}>
                    <div className="my-2">
                      <div className="flex justify-between">
                        <div className="flex flex-row gap-2">
                          <a href="" className="w-[fit-content]">
                            <Image
                              className="h-6 w-6 rounded-full"
                              src={(await getUserInfo(rev.user_id)).data!!.image!! || "/icons/pfp1.png"}
                              alt="story-image"></Image>
                          </a>
                          <a href="" className="h-[fit-content] w-[fit-content]">
                            <h2
                              style={{
                                textShadow: "0em 0em 0.3em white",
                              }}
                              className="w-full cursor-pointer text-sm hover:underline">
                              {(await getUserInfo(rev.user_id)).data.name}
                            </h2>
                          </a>
                        </div>
                        {rev.user_id == currentUser.user?.id && (
                          <DeleteReview commentId={rev.comment_id} storyId={story?.id!!} />
                        )}
                      </div>
                      <p className="mt-0 p-[0.1rem] font-mono text-[14px] text-white/50">{rev.comment}</p>
                    </div>
                    <div className="mx-auto h-[0.01rem] w-full bg-white/5"></div>
                  </div>
                ))}
              </>
            )}
          </div>
        </div>
      </div>
    </main>
  );
}
